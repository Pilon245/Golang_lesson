File: hw3.test
Type: alloc_space
Time: Oct 9, 2024 at 11:41am (MSK)
Showing nodes accounting for 1099.49MB, 99.28% of 1107.52MB total
Dropped 24 nodes (cum <= 5.54MB)
      flat  flat%   sum%        cum   cum%
  277.68MB 25.07% 25.07%  1063.99MB 96.07%  hw3.FastSearch
  242.14MB 21.86% 46.94%   242.14MB 21.86%  strings.(*Builder).WriteString (inline)
  237.14MB 21.41% 68.35%   237.14MB 21.41%  bufio.(*Scanner).Text (inline)
  177.02MB 15.98% 84.33%   177.02MB 15.98%  encoding/json.(*decodeState).literalStore
   48.01MB  4.33% 88.66%   306.53MB 27.68%  encoding/json.Unmarshal
   44.50MB  4.02% 92.68%    44.50MB  4.02%  reflect.growslice
   22.50MB  2.03% 94.71%   246.52MB 22.26%  encoding/json.(*decodeState).object
   15.01MB  1.35% 96.07%    15.01MB  1.35%  regexp/syntax.(*compiler).inst (inline)
      12MB  1.08% 97.15%       12MB  1.08%  encoding/json.(*scanner).pushParseState
    6.85MB  0.62% 97.77%     6.85MB  0.62%  io.ReadAll
       6MB  0.54% 98.31%        6MB  0.54%  regexp/syntax.(*parser).newRegexp (inline)
    4.15MB  0.37% 98.69%    43.53MB  3.93%  hw3.SlowSearch
    3.50MB  0.32% 99.00%     9.50MB  0.86%  regexp/syntax.parse
       3MB  0.27% 99.28%    29.51MB  2.66%  regexp.compile
         0     0% 99.28%   209.52MB 18.92%  encoding/json.(*decodeState).array
         0     0% 99.28%   246.52MB 22.26%  encoding/json.(*decodeState).unmarshal
         0     0% 99.28%   246.52MB 22.26%  encoding/json.(*decodeState).value
         0     0% 99.28%       12MB  1.08%  encoding/json.checkValid
         0     0% 99.28%       12MB  1.08%  encoding/json.stateBeginValue
         0     0% 99.28%  1058.99MB 95.62%  hw3.BenchmarkFast
         0     0% 99.28%    25.82MB  2.33%  hw3.TestSearch
         0     0% 99.28%    22.71MB  2.05%  hw3.init.0
         0     0% 99.28%     6.85MB  0.62%  io/ioutil.ReadAll (inline)
         0     0% 99.28%    44.50MB  4.02%  reflect.Value.Grow
         0     0% 99.28%    44.50MB  4.02%  reflect.Value.grow
         0     0% 99.28%    29.51MB  2.66%  regexp.Compile (inline)
         0     0% 99.28%    30.02MB  2.71%  regexp.MatchString
         0     0% 99.28%        8MB  0.72%  regexp/syntax.(*compiler).compile
         0     0% 99.28%        8MB  0.72%  regexp/syntax.(*compiler).rune
         0     0% 99.28%        6MB  0.54%  regexp/syntax.(*parser).literal
         0     0% 99.28%    16.51MB  1.49%  regexp/syntax.Compile
         0     0% 99.28%     9.50MB  0.86%  regexp/syntax.Parse (inline)
         0     0% 99.28%    22.71MB  2.05%  runtime.doInit (inline)
         0     0% 99.28%    22.71MB  2.05%  runtime.doInit1
         0     0% 99.28%    22.71MB  2.05%  runtime.main
         0     0% 99.28%  1055.98MB 95.35%  testing.(*B).launch
         0     0% 99.28%  1058.99MB 95.62%  testing.(*B).runN
         0     0% 99.28%    25.82MB  2.33%  testing.tRunner
